//****************************************************************************
//
//
//
//****************************************************************************


 
 
// ===========================================================================
//                                   Libraries
// ===========================================================================
#include <cstdio>
#include <cstdlib>


// ===========================================================================
//                                 Project Files
// ===========================================================================
#include "individue.h"




//############################################################################
//                                                                           #
//                           Class individue              
//                                                                           #
//############################################################################

// ===========================================================================
//                         Definition of static attributes
// ===========================================================================

// ===========================================================================
//                                  Constructors
// ===========================================================================
individue::individue(void)
{

	width = 700;
    height = 700;

    speed_limit = 0.0001;
    
	x = width * ( (double)rand() / (double)RAND_MAX );
	y = height * ( (double)rand() / (double)RAND_MAX );

	vx = 2*speed_limit * ( (double)rand() / (double)RAND_MAX ) - speed_limit;
	vy = 2*speed_limit * ( (double)rand() / (double)RAND_MAX ) - speed_limit;
}

// ===========================================================================
//                                  Destructor
// ===========================================================================
individue::~individue(void)
{

}

// ===========================================================================
//                                 Public Methods
// ===========================================================================

// ===========================================================================
//                                Protected Methods
// ===========================================================================

// ===========================================================================
//                               Non inline accessors
// ===========================================================================
